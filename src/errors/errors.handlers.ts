import express from 'express';
import { StatusCodes } from 'http-status-codes';
import Errors from './erros.custom';
/*
Catches all errors generated by express and API controllers and gives appopriate responses.
Requires express-async-errors to work
*/
const errorHandlers = (
    err: any,
    req: express.Request,
    res: express.Response,
    next: express.NextFunction,
) => {
    if (err instanceof Errors.CustomAPIError) {
        //If its a custom defined errror thrown
        return res.status(err.status).json({ success: false, error: err.message });
    }
    //For all errors generated by a non custom error throwers or uncaught errors
    let defaultError = {
        status: err.status || StatusCodes.INTERNAL_SERVER_ERROR,
        message: err.message || 'Ooooops snap something broke, please try again later',
    };
    // Can add custom error checkers to catch and provide more refined error responses
    //..


    res.status(defaultError.status).json({ success: false, error: defaultError.message });
};

export default errorHandlers;
